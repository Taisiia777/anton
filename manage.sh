#!/bin/bash

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

# –§—É–Ω–∫—Ü–∏—è –ø–æ–∫–∞–∑–∞ —Å—Ç–∞—Ç—É—Å–∞
show_status() {
    echo -e "${BLUE}üìä –°—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤:${NC}"
    docker-compose ps
    echo ""
    
    echo -e "${BLUE}üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏:${NC}"
    if curl -s -o /dev/null -w "%{http_code}" http://localhost:8080 --connect-timeout 5 | grep -q "200\|302\|301"; then
        echo -e "${GREEN}‚úÖ HTTP (8080): –†–∞–±–æ—Ç–∞–µ—Ç${NC}"
    else
        echo -e "${RED}‚ùå HTTP (8080): –ù–µ –¥–æ—Å—Ç—É–ø–µ–Ω${NC}"
    fi
    
    if curl -s -k -o /dev/null -w "%{http_code}" https://localhost:8443 --connect-timeout 5 | grep -q "200\|302\|301"; then
        echo -e "${GREEN}‚úÖ HTTPS (8443): –†–∞–±–æ—Ç–∞–µ—Ç${NC}"
    else
        echo -e "${YELLOW}‚ö†Ô∏è  HTTPS (8443): –ù–µ –¥–æ—Å—Ç—É–ø–µ–Ω${NC}"
    fi
}

# –§—É–Ω–∫—Ü–∏—è –ø–æ–∫–∞–∑–∞ —Ä–µ—Å—É—Ä—Å–æ–≤
show_resources() {
    echo -e "${BLUE}üíæ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Ä–µ—Å—É—Ä—Å–æ–≤:${NC}"
    docker stats --no-stream --format "table {{.Container}}\t{{.CPUPerc}}\t{{.MemUsage}}\t{{.NetIO}}" $(docker-compose ps -q) 2>/dev/null || echo "–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –Ω–µ –∑–∞–ø—É—â–µ–Ω—ã"
}

case $1 in
    "start")
        echo -e "${GREEN}üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã...${NC}"
        docker-compose up -d
        sleep 5
        show_status
        ;;
    "stop")
        echo -e "${YELLOW}üõë –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã...${NC}"
        docker-compose down
        echo -e "${GREEN}‚úÖ –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã${NC}"
        ;;
    "restart")
        echo -e "${YELLOW}üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã...${NC}"
        docker-compose restart
        sleep 5
        show_status
        ;;
    "logs")
        if [ -n "$2" ]; then
            echo -e "${YELLOW}üìù –õ–æ–≥–∏ —Å–µ—Ä–≤–∏—Å–∞ $2:${NC}"
            docker-compose logs -f "$2"
        else
            echo -e "${YELLOW}üìù –õ–æ–≥–∏ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤:${NC}"
            docker-compose logs -f
        fi
        ;;
    "status")
        show_status
        ;;
    "resources")
        show_resources
        ;;
    "update")
        echo -e "${YELLOW}üîÑ –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ...${NC}"
        docker-compose down
        docker-compose build --no-cache
        docker-compose up -d
        sleep 10
        show_status
        echo -e "${GREEN}‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!${NC}"
        ;;
    "rebuild")
        echo -e "${YELLOW}üèóÔ∏è  –ü–æ–ª–Ω–∞—è –ø–µ—Ä–µ—Å–±–æ—Ä–∫–∞...${NC}"
        docker-compose down --volumes --remove-orphans
        docker system prune -f
        docker-compose build --no-cache --parallel
        docker-compose up -d
        sleep 10
        show_status
        echo -e "${GREEN}‚úÖ –ü–µ—Ä–µ—Å–±–æ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!${NC}"
        ;;
    "test")
        echo -e "${YELLOW}üîç –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è...${NC}"
        echo ""
        echo -e "${BLUE}HTTP —Ç–µ—Å—Ç:${NC}"
        curl -I http://localhost:8080 --connect-timeout 10 || echo -e "${RED}HTTP –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω${NC}"
        echo ""
        echo -e "${BLUE}HTTPS —Ç–µ—Å—Ç:${NC}"
        curl -I -k https://localhost:8443 --connect-timeout 10 || echo -e "${YELLOW}HTTPS –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω${NC}"
        ;;
    "shell")
        if [ "$2" = "app" ]; then
            echo -e "${BLUE}üêö –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—É –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è...${NC}"
            docker-compose exec app /bin/bash
        elif [ "$2" = "nginx" ]; then
            echo -e "${BLUE}üêö –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—É nginx...${NC}"
            docker-compose exec nginx /bin/sh
        else
            echo -e "${RED}–£–∫–∞–∂–∏—Ç–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä: app –∏–ª–∏ nginx${NC}"
            echo -e "${YELLOW}–ü—Ä–∏–º–µ—Ä: $0 shell app${NC}"
        fi
        ;;
    "cleanup")
        echo -e "${YELLOW}üßπ –û—á–∏—Å—Ç–∫–∞ —Å–∏—Å—Ç–µ–º—ã Docker...${NC}"
        docker-compose down --volumes --remove-orphans
        docker system prune -a -f --volumes
        echo -e "${GREEN}‚úÖ –û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞${NC}"
        ;;
    *)
        echo -e "${BLUE}üõ†Ô∏è  –°–∏—Å—Ç–µ–º–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è mamostore.su${NC}"
        echo ""
        echo -e "${YELLOW}–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 <–∫–æ–º–∞–Ω–¥–∞> [–ø–∞—Ä–∞–º–µ—Ç—Ä—ã]${NC}"
        echo ""
        echo -e "${GREEN}–û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:${NC}"
        echo -e "  ${YELLOW}start${NC}      - –ó–∞–ø—É—Å—Ç–∏—Ç—å –≤—Å–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã"
        echo -e "  ${YELLOW}stop${NC}       - –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—Å–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã"
        echo -e "  ${YELLOW}restart${NC}    - –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –≤—Å–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã"
        echo -e "  ${YELLOW}status${NC}     - –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å –∏ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å"
        echo -e "  ${YELLOW}update${NC}     - –û–±–Ω–æ–≤–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ"
        echo -e "  ${YELLOW}rebuild${NC}    - –ü–æ–ª–Ω–∞—è –ø–µ—Ä–µ—Å–±–æ—Ä–∫–∞"
        echo ""
        echo -e "${GREEN}–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥:${NC}"
        echo -e "  ${YELLOW}logs${NC}       - –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤"
        echo -e "  ${YELLOW}logs app${NC}   - –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"
        echo -e "  ${YELLOW}logs nginx${NC} - –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ nginx"
        echo -e "  ${YELLOW}resources${NC}  - –ü–æ–∫–∞–∑–∞—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Ä–µ—Å—É—Ä—Å–æ–≤"
        echo -e "  ${YELLOW}test${NC}       - –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è"
        echo ""
        echo -e "${GREEN}–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ:${NC}"
        echo -e "  ${YELLOW}shell app${NC}  - –ü–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—É –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"
        echo -e "  ${YELLOW}shell nginx${NC}- –ü–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—É nginx"
        echo -e "  ${YELLOW}cleanup${NC}    - –û—á–∏—Å—Ç–∏—Ç—å –≤—Å–µ –¥–∞–Ω–Ω—ã–µ Docker"
        echo ""
        echo -e "${BLUE}–î–æ—Å—Ç—É–ø–Ω—ã–µ –∞–¥—Ä–µ—Å–∞:${NC}"
        echo -e "  ${GREEN}HTTP:${NC}  http://localhost:8080"
        echo -e "  ${GREEN}HTTPS:${NC} https://localhost:8443"
        exit 1
        ;;
esac